import React, { useState } from "react";
import { Box, Button, Container, Flex, FormControl, FormLabel, Heading, Input, Stack, useToast, VStack } from "@chakra-ui/react";
import { FaSignInAlt, FaUserPlus } from "react-icons/fa";

const Index = () => {
  const [isLogin, setIsLogin] = useState(true);
  const toast = useToast();

  const handleSubmit = async (event) => {
    event.preventDefault();
    const { email, password } = event.target.elements;

    try {
      const response = await fetch(`https://backengine-haen.fly.dev/${isLogin ? "login" : "signup"}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          email: email.value,
          password: password.value,
        }),
      });

      if (response.ok) {
        const data = await response.json();
        if (data.accessToken) {
          // Store the accessToken in localStorage or context for further API calls
          localStorage.setItem("accessToken", data.accessToken);
        }
        toast({
          title: isLogin ? "Logged in successfully!" : "Signed up successfully!",
          status: "success",
          duration: 3000,
          isClosable: true,
        });
      } else {
        const errorData = await response.json();
        throw new Error(errorData.detail || "An error occurred");
      }
    } catch (error) {
      toast({
        title: "Error",
        description: error.message,
        status: "error",
        duration: 3000,
        isClosable: true,
      });
    }
  };

  return (
    <Container maxW="container.md" py={10}>
      <VStack spacing={8}>
        <Heading>Welcome to Interactive API</Heading>
        <Box w="100%">
          <Stack spacing={4} direction={{ base: "column", sm: "row" }} justify="center">
            <Button leftIcon={<FaSignInAlt />} onClick={() => setIsLogin(true)} colorScheme={isLogin ? "blue" : "gray"}>
              Login
            </Button>
            <Button leftIcon={<FaUserPlus />} onClick={() => setIsLogin(false)} colorScheme={!isLogin ? "blue" : "gray"}>
              Signup
            </Button>
          </Stack>
        </Box>
        <Flex width="full" align="center" justifyContent="center">
          <form onSubmit={handleSubmit}>
            <VStack spacing={4} w="full" maxW="md">
              <FormControl id="email" isRequired>
                <FormLabel>Email</FormLabel>
                <Input type="email" name="email" placeholder="Enter your email" />
              </FormControl>
              <FormControl id="password" isRequired>
                <FormLabel>Password</FormLabel>
                <Input type="password" name="password" placeholder="Enter your password" />
              </FormControl>
              <Button type="submit" colorScheme="blue" size="lg" w="full">
                {isLogin ? "Login" : "Signup"}
              </Button>
            </VStack>
          </form>
        </Flex>
      </VStack>
    </Container>
  );
};

export default Index;
